name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v?[0-9]+.[0-9]+.[0-9]+**' # Matches release tags of the form major.minor.patch, e.g. 1.2.1
  pull_request:

jobs:
  assemble:
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}
            ${{ runner.os }}-gradle-

      - name: Assemble
        run: ./gradlew --no-daemon clean compileJava compileTestJava assemble

      - name: Upload workspace
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: |
            ./
            !./.git/**

  unitTests:
    needs: assemble
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}
            ${{ runner.os }}-gradle-

      - name: Download workspace
        uses: actions/download-artifact@v3
        with:
          name: workspace

      - name: Build
        run: ./gradlew --no-daemon build

      - name: Store distribution artifacts
        uses: actions/upload-artifact@v3
        with:
          name: distributions
          path: build/distributions

  build:
    runs-on: ubuntu-latest
    env:
      architecture: "amd64"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU for Docker
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Check Docker and Buildx versions
        run: |
          docker --version
          docker buildx version
      - name: Create and use Buildx builder
        run: |
          docker buildx create --use --name multiarch-builder --driver docker-container
          docker buildx inspect --bootstrap
      - name: Inspect Buildx
        run: |
          docker buildx inspect multiarch-builder

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Check Dockerfile syntax
        run: |
          docker run --rm -i hadolint/hadolint < docker/openjdk-21/Dockerfile
          docker run --rm -i hadolint/hadolint < docker/openjdk-21-debug/Dockerfile
          docker run --rm -i hadolint/hadolint < docker/openjdk-latest/Dockerfile
      - name: Build Docker Image
        run: |
          ./gradlew --no-daemon dockerDist -Pdocker-platform=linux/amd64,linux/arm64 distDocker
      - name: Test Docker Image
        run: |
          mkdir -p docker/reports
          curl -L https://github.com/goss-org/goss/releases/download/v0.3.22/goss-linux-amd64 -o ./docker/tests/goss-linux-amd64
          ./gradlew --no-daemon dockerTest

  publishDocker:
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      architecture: "amd64"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Login to Docker Hub for self hosted
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER_RW }}
          password: ${{ secrets.DOCKER_PAT_RW }}
      - name: Publish Docker Image
        run: |
          ./gradlew --no-daemon dockerUpload

  draftRelease:
    if: startsWith(github.ref, 'refs/tags/')
    needs: publishDocker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Release ${{ github.ref }} 
            ### Release Date: ${{ steps.date.outputs.date }}
            ### Additions and Improvements
            ### Bug Fixes
          draft: true
          prerelease: false
