name: CI

on: [push, pull_request]

jobs:
  assemble:
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}
            ${{ runner.os }}-gradle-

      - name: Assemble
        run: ./gradlew --no-daemon clean compileJava compileTestJava assemble

      - name: Upload workspace
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: |
            ./
            !./.git/**

  unitTests:
    needs: assemble
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}
            ${{ runner.os }}-gradle-

      - name: Download workspace
        uses: actions/download-artifact@v2
        with:
          name: workspace

      - name: Build
        run: ./gradlew --no-daemon build

      - name: Store distribution artifacts
        uses: actions/upload-artifact@v2
        with:
          name: distributions
          path: build/distributions

  build:
    runs-on: ubuntu-latest
    env:
      architecture: "amd64"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Check Dockerfile syntax
        run: |
          docker run --rm -i hadolint/hadolint < docker/openjdk-17/Dockerfile
          docker run --rm -i hadolint/hadolint < docker/openjdk-17-debug/Dockerfile
          docker run --rm -i hadolint/hadolint < docker/openjdk-latest/Dockerfile
          docker run --rm -i hadolint/hadolint < docker/graalvm/Dockerfile
      - name: Build Docker Image
        run: |
          ./gradlew --no-daemon distDocker
      - name: Test Docker Image
        run: |
          mkdir -p docker/reports
          curl -L https://github.com/goss-org/goss/releases/download/v0.3.22/goss-linux-amd64 -o ./docker/tests/goss-linux-amd64
          ./gradlew --no-daemon testDocker

  buildArm64:
    runs-on: [ ARM64, Linux, self-hosted ]
    strategy:
      matrix:
        architecture: [ arm64 ]
    env:
      architecture: "arm64"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Check Dockerfile syntax
        run: |
          docker run --rm -i hadolint/hadolint < docker/openjdk-17/Dockerfile
          docker run --rm -i hadolint/hadolint < docker/openjdk-17-debug/Dockerfile
          docker run --rm -i hadolint/hadolint < docker/openjdk-latest/Dockerfile
          docker run --rm -i hadolint/hadolint < docker/graalvm/Dockerfile
      - name: Build Docker Image
        run: |
          ./gradlew --no-daemon distDocker
      - name: Test Docker Image
        run: |
          mkdir -p docker/reports
          curl -L https://github.com/goss-org/goss/releases/download/v0.3.22/goss-linux-arm64 -o ./docker/tests/goss-linux-arm64
          ./gradlew --no-daemon testDocker

  publishDocker:
    needs: build
    runs-on: ubuntu-latest
    env:
      architecture: "amd64"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Publish Docker Image
        run: |
          echo "${{ secrets.DOCKER_PAT }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          ./gradlew --no-daemon dockerUpload

  publishDockerArm64:
    needs: build
    runs-on: [ ARM64, Linux, self-hosted ]
    env:
      architecture: "arm64"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Publish Docker Image
        run: |
          docker login --username "${{ secrets.DOCKER_USER_RW }}" --password "${{ secrets.DOCKER_PASSWORD_RW }}"
          ./gradlew --no-daemon dockerUpload