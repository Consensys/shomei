name: CI

on: [push, pull_request]

jobs:
  assemble:
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}
            ${{ runner.os }}-gradle-

      - name: Assemble
        run: ./gradlew --no-daemon clean compileJava compileTestJava assemble

      - name: Upload workspace
        uses: actions/upload-artifact@v2
        with:
          name: workspace
          path: .
          exclude: .git/**

  unitTests:
    needs: assemble
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/versions.gradle') }}
            ${{ runner.os }}-gradle-

      - name: Download workspace
        uses: actions/download-artifact@v2
        with:
          name: workspace

      - name: Build
        run: ./gradlew --no-daemon build

      - name: Store distribution artifacts
        uses: actions/upload-artifact@v2
        with:
          name: distributions
          path: build/distributions
