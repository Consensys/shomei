---
# On every push to main we create develop
# On every actual version x.y.z we create x.y.z && latest (not for -SNAPSHOT etc etc)
name: 'docker-metadata'
description: 'Composite action to get docker metadata'
outputs:
  tags:
    description: 'docker tags'
    value: ${{ steps.docker-metadata.outputs.tags }}
  push:
    description: 'docker push'
    value: ${{ steps.docker-metadata.outputs.push }}    
  build-date:
    description: 'The build date to use'
    value: ${{ steps.docker-metadata.outputs.build-date }}
  vcs-ref:
    description: 'The git ref'
    value: ${{ steps.docker-metadata.outputs.vcs-ref }}    
runs:
  using: "composite"
  steps:
    - name: Calculate Version
      id: docker-metadata
      shell: bash      
      run:  |
          # Calculate Docker Tags
          TAGS="consensys/linea-shomei:develop"
          if [[ "${{ needs.assemble.outputs.publish-version }}" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            TAGS="consensys/linea-shomei:${{ needs.assemble.outputs.publish-version }}"
            TAGS="$TAGS,consensys/linea-shomei:latest"
          fi
          # echo "tags=$TAGS" >> $GITHUB_OUTPUT
          
          # Determine Push Flag
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            if [ "${{ github.event_name }}" != "pull_request" ] && [ "${{ github.event_name }}" != "schedule" ] ; then
              echo "push=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "push=false" >> $GITHUB_OUTPUT
          fi
          
          # Set Build Args
          echo "build-date=$(date --utc --rfc-3339=seconds)" >> $GITHUB_OUTPUT
          echo "vcs-ref=${{ github.sha }}" >> $GITHUB_OUTPUT


